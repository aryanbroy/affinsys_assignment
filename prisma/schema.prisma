// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  password     String
  balance      Int           @default(0)
  transactions Transaction[] @relation("SenderTransactions")
  paymentsMade Transaction[] @relation("ReceivedTransactions")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  products     Product[]
}

enum TransactionKind {
  FUNDING
  PAYMENT
  PURCHASE
}

model Transaction {
  id          Int             @id @default(autoincrement())
  kind        TransactionKind
  amt         Int
  updated_bal Int
  timestamp   DateTime        @default(now())
  senderId    Int
  sender      User            @relation("SenderTransactions", fields: [senderId], references: [id])
  toUserId    Int?
  toUser      User?           @relation("ReceivedTransactions", fields: [toUserId], references: [id])
  Product     Product?        @relation(fields: [productId], references: [id])
  productId   Int?
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String
  price        Int
  description  String
  createdById  Int
  createdBy    User          @relation(fields: [createdById], references: [id])
  transactions Transaction[]
}
