// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int           @id @default(autoincrement())
  username             String        @unique
  password             String
  balance              Float         @default(0)
  sentTransactions     Transaction[] @relation("SenderTransactions")
  receivedTransactions Transaction[] @relation("ReceivedTransactions")
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  products             Product[] // products created by user 
}

enum TransactionKind {
  FUNDING
  PAYMENT
  PURCHASE
}

model Transaction {
  id          Int             @id @default(autoincrement())
  kind        TransactionKind
  amt         Int
  updated_bal Float
  timestamp   DateTime        @default(now())
  senderId    Int
  sender      User            @relation("SenderTransactions", fields: [senderId], references: [id])
  toUserId    Int?
  toUser      User?           @relation("ReceivedTransactions", fields: [toUserId], references: [id])
  productId   Int?
  product     Product?        @relation("ProductTransactions", fields: [productId], references: [id])
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  price       Int
  description String
  createdById Int
  createdBy   User          @relation(fields: [createdById], references: [id])
  transaction Transaction[] @relation("ProductTransactions")
}
